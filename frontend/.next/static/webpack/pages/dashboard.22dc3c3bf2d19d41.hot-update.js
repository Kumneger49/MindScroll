"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/dashboard",{

/***/ "./utils/api.ts":
/*!**********************!*\
  !*** ./utils/api.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchSummary: function() { return /* binding */ fetchSummary; },\n/* harmony export */   fetchSummaryFromUserData: function() { return /* binding */ fetchSummaryFromUserData; }\n/* harmony export */ });\nasync function fetchSummary() {\n    try {\n        const res = await fetch(\"http://localhost:8000/generate-summary\");\n        if (!res.ok) {\n            throw new Error(\"HTTP error! status: \".concat(res.status));\n        }\n        return await res.json();\n    } catch (error) {\n        console.error(\"Error fetching summary:\", error);\n        throw error;\n    }\n}\nasync function fetchSummaryFromUserData(userData) {\n    try {\n        const res = await fetch(\"http://localhost:8000/generate-summary-from-user-data\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userData)\n        });\n        if (!res.ok) {\n            throw new Error(\"HTTP error! status: \".concat(res.status));\n        }\n        return await res.json();\n    } catch (error) {\n        console.error(\"Error fetching summary from user data:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUE2Qk8sZUFBZUE7SUFDcEIsSUFBSTtRQUNGLE1BQU1DLE1BQU0sTUFBTUMsTUFBTTtRQUN4QixJQUFJLENBQUNELElBQUlFLEVBQUUsRUFBRTtZQUNYLE1BQU0sSUFBSUMsTUFBTSx1QkFBa0MsT0FBWEgsSUFBSUksTUFBTTtRQUNuRDtRQUNBLE9BQU8sTUFBTUosSUFBSUssSUFBSTtJQUN2QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDJCQUEyQkE7UUFDekMsTUFBTUE7SUFDUjtBQUNGO0FBRU8sZUFBZUUseUJBQXlCQyxRQUk5QztJQUNDLElBQUk7UUFDRixNQUFNVCxNQUFNLE1BQU1DLE1BQU0seURBQXlEO1lBQy9FUyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0w7UUFDdkI7UUFFQSxJQUFJLENBQUNULElBQUlFLEVBQUUsRUFBRTtZQUNYLE1BQU0sSUFBSUMsTUFBTSx1QkFBa0MsT0FBWEgsSUFBSUksTUFBTTtRQUNuRDtRQUNBLE9BQU8sTUFBTUosSUFBSUssSUFBSTtJQUN2QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDBDQUEwQ0E7UUFDeEQsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL2FwaS50cz82ZWQwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgRm9vZEFnZW50T3V0cHV0IHtcbiAgY2Fsb3JpZXM6IG51bWJlcjtcbiAgbnV0cml0aW9uX3Njb3JlOiBudW1iZXI7XG4gIGNvbW1lbnQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFeGVyY2lzZUFnZW50T3V0cHV0IHtcbiAgY2Fsb3JpZXNfYnVybmVkOiBudW1iZXI7XG4gIG5vdGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMaWZlc3R5bGVBZ2VudE91dHB1dCB7XG4gIHdlbGxuZXNzX3Njb3JlOiBudW1iZXI7XG4gIGFkdmljZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9yY2hlc3RyYXRvclN1bW1hcnkge1xuICBvdmVyYWxsX2hlYWx0aF9zY29yZTogbnVtYmVyO1xuICBzdW1tYXJ5OiBzdHJpbmc7XG4gIHJlY29tbWVuZGF0aW9uczogc3RyaW5nW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGFpbHlTdW1tYXJ5IHtcbiAgZm9vZF9hZ2VudDogRm9vZEFnZW50T3V0cHV0O1xuICBleGVyY2lzZV9hZ2VudDogRXhlcmNpc2VBZ2VudE91dHB1dDtcbiAgbGlmZXN0eWxlX2FnZW50OiBMaWZlc3R5bGVBZ2VudE91dHB1dDtcbiAgb3JjaGVzdHJhdG9yX3N1bW1hcnk6IE9yY2hlc3RyYXRvclN1bW1hcnk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFN1bW1hcnkoKTogUHJvbWlzZTxEYWlseVN1bW1hcnk+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9nZW5lcmF0ZS1zdW1tYXJ5XCIpO1xuICAgIGlmICghcmVzLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIHN0YXR1czogJHtyZXMuc3RhdHVzfWApO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBzdW1tYXJ5OicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hTdW1tYXJ5RnJvbVVzZXJEYXRhKHVzZXJEYXRhOiB7XG4gIG1lYWxzOiBzdHJpbmdbXTtcbiAgZXhlcmNpc2VzOiBzdHJpbmdbXTtcbiAgbGlmZXN0eWxlOiBhbnk7XG59KTogUHJvbWlzZTxEYWlseVN1bW1hcnk+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9nZW5lcmF0ZS1zdW1tYXJ5LWZyb20tdXNlci1kYXRhXCIsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHVzZXJEYXRhKSxcbiAgICB9KTtcbiAgICBcbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBzdGF0dXM6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlcy5qc29uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgc3VtbWFyeSBmcm9tIHVzZXIgZGF0YTonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJmZXRjaFN1bW1hcnkiLCJyZXMiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiZmV0Y2hTdW1tYXJ5RnJvbVVzZXJEYXRhIiwidXNlckRhdGEiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/api.ts\n"));

/***/ })

});